# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XkUbpaLC6F45b9cdIeqpY7oZZd3ai7kF
"""

!pip install mysql-connector-python

import mysql.connector
from mysql.connector import errorcode
import pandas as pd


# Connect to DB
config = {
  'user': '#####',
  'password': '#####',
  'host': 'sql8.freesqldatabase.com',
  'database': 'sql8722482',
  'raise_on_warnings': True
}
try:
  cnx = mysql.connector.connect(**config)
except mysql.connector.Error as err:
  if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
    print("Something is wrong with your user name or password")
  elif err.errno == errorcode.ER_BAD_DB_ERROR:
    print("Database does not exist")
  else:
    print(err)
else:


#SQL SCRIPTS
#CREATE TABLE
  sql_create_table_script = " DROP TABLE IF EXISTS INCIDENTS; \
    CREATE TABLE INCIDENTS (\
    Tickets VARCHAR(24) PRIMARY KEY, \
    Region VARCHAR(24), \
    Problem_Fault TEXT, \
    Category VARCHAR(24), \
    Impact VARCHAR(24), \
    Occurrence_Time DATETIME, \
    Resolution_Time DATETIME,\
    Restoration_Action TEXT, \
    Count_2G INT,\
    Count_3G INT, \
    Count_4G INT, \
    Vendor VARCHAR(24), \
    Affected_Sites TEXT);"


#INSERT DATA INTO TABLE
  sql_insert_data_script = "INSERT INTO INCIDENTS ( \
    Tickets, Region, Problem_Fault, Category, Impact, Occurrence_Time, Resolution_Time, Restoration_Action, Count_2G, Count_3G, Count_4G, Vendor, Affected_Sites \
    ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s);"

# Create Table in DB
  cursor = cnx.cursor()

for result in cursor.execute(sql_create_table_script, multi=True):
  pass
print("Table created successfully")

# Close connection
cursor.close()
cnx.close()



  #Read Data from csv file (Extact)
incidents = pd.read_csv("/content/drive/MyDrive/www.kendyonline.com/incidents_data_with_sites.csv")

 # incidents.info()



#TRANSFORM DATA
#Change column dtypes
incidents['Occurrence_Time'] = pd.to_datetime(incidents['Occurrence_Time'])
incidents['Resolution_Time'] = pd.to_datetime(incidents['Resolution_Time'])

#Drop unnecessary columns to match DB table
incidents2 = incidents.drop(columns=['MTTR', 'MTTR_Hrs', 'Outage_Hours_2G', 'Outage_Hours_3G', 'Outage_Hours_4G'])


#Store incident items in a tuple
incident_list = []
for index, row in incidents2.iterrows():
  incident_list.append(tuple(row))


#Insert Data
try:
  cnx = mysql.connector.connect(**config)
  cursor = cnx.cursor()
  cursor.executemany(sql_insert_data_script, incident_list)
  cnx.commit()  # Commit the transaction

  print("Data inserted successfully")
except mysql.connector.Error as err:
  print(f"Error inserting data: {err}")
finally:
  if cursor:
    cursor.close()
  if cnx:
    cnx.close()